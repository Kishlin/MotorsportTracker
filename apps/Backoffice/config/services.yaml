parameters:
  kishlin.app.name: 'Backoffice'
  kishlin.app.environment: '%env(APP_ENV)%'
  kishlin.database.core.url: '%env(DATABASE_CORE_URL)%'
  kishlin.database.cache.url: '%env(DATABASE_CACHE_URL)%'
  kishlin.src.dir: '/app'
  kishlin.jwt.secretKey: '%env(JWT_SECRET_KEY)%'
  kishlin.jwt.algorithm: '%env(JWT_ALGORITHM)%'
  kishlin.jwt.expire_token: '%env(default:kishlin.jwt.expire_token_default:JWT_EXP_TOKEN)%'
  kishlin.jwt.expire_token_default: '+10 minute'
  kishlin.jwt.expire_refresh_token: '%env(default:kishlin.jwt.expire_refresh_token_default:JWT_EXP_REFRESH_TOKEN)%'
  kishlin.jwt.expire_refresh_token_default: '+1 month'
  kishlin.jwt.exp_claim_is_required: '%env(bool:JWT_EXP_CLAIM_IS_REQUIRED)%'
  kishlin.hostname: '%env(HOSTNAME)%'

services:
  _defaults:
    autoconfigure: true
    autowire: true

  Kishlin\Apps\Backoffice\:
    resource: '../src'

  Kishlin\Backend\:
    resource: '../../../src/Backend'
    exclude:
      - '../../../src/Backend/Shared'
      - '../../../src/Backend/**/Application/*/*Exception.php'
      - '../../../src/Backend/**/Infrastructure/Persistence/Fixtures'
      - '../../../src/Backend/**/Infrastructure/Persistence/Doctrine/DbalTypes'
      - '../../../src/Backend/**/Domain/{DomainEvent,Entity,ReadModel,ValueObject,View}'


  ##> Monitoring

  Kishlin\Backend\Shared\Infrastructure\Monitoring\:
    resource: '../../../src/Backend/Shared/Infrastructure/Monitoring'
    bind:
      $appName: '%kishlin.app.name%'


  ##> Messaging

  Kishlin\Backend\Shared\Domain\Bus\Command\CommandBus:
    class: 'Kishlin\Backend\Shared\Infrastructure\Bus\Command\InMemoryCommandBusUsingSymfony'
    arguments:
      - '@symfony.messenger.bus.command'
    tags:
      - { name: messenger.bus }

  Kishlin\Backend\Shared\Domain\Bus\Event\EventDispatcher:
    class: 'Kishlin\Backend\Shared\Infrastructure\Bus\Event\InMemoryEventDispatcherUsingSymfony'
    arguments:
      - '@symfony.messenger.bus.event'
    tags:
      - { name: messenger.bus }

  Kishlin\Backend\Shared\Domain\Bus\Query\QueryBus:
    class: 'Kishlin\Backend\Shared\Infrastructure\Bus\Query\InMemoryQueryBusUsingSymfony'
    arguments:
      - '@symfony.messenger.bus.query'
    tags:
      - { name: messenger.bus }


  ##> Time

  Kishlin\Backend\Shared\Domain\Time\Clock:
    class: 'Kishlin\Backend\Shared\Infrastructure\Time\SystemClock'


  ##> Randomness

  Kishlin\Backend\Shared\Infrastructure\Randomness\UuidGeneratorUsingRamsey:
  Kishlin\Backend\Shared\Domain\Randomness\UuidGenerator:
    alias: 'Kishlin\Backend\Shared\Infrastructure\Randomness\UuidGeneratorUsingRamsey'

  Kishlin\Backend\Shared\Domain\Randomness\GenerateUuidCommandUsingSymfony:
    class: 'Kishlin\Backend\Shared\Infrastructure\Randomness\GenerateUuidCommandUsingSymfony'
    tags: ['console.command']


  ##> Persistence

  kishlin.app.infrastructure.connection.core:
    class: Kishlin\Backend\Persistence\Core\Connection\Connection
    factory: [ Kishlin\Backend\Persistence\PDO\PDOConnection, create ]
    arguments:
      $host: '%env(DB_HOST)%'
      $port: '%env(DB_PORT)%'
      $dbName: '%env(DB_CORE)%'
      $user: '%env(DB_USER)%'
      $password: '%env(DB_PASSWORD)%'
    public: true

  kishlin.app.infrastructure.connection.cache:
    class: Kishlin\Backend\Persistence\Core\Connection\Connection
    factory: [ Kishlin\Backend\Persistence\PDO\PDOConnection, create ]
    arguments:
      $host: '%env(DB_HOST)%'
      $port: '%env(DB_PORT)%'
      $dbName: '%env(DB_CACHE)%'
      $user: '%env(DB_USER)%'
      $password: '%env(DB_PASSWORD)%'
    public: true


  _instanceof:
    Kishlin\Backend\Shared\Infrastructure\Monitoring\Controller\Symfony\AbstractCheckHealthController:
      tags: ['controller.service_arguments']

    Symfony\Bundle\FrameworkBundle\Controller\AbstractController:
      tags: ['controller.service_arguments']

    Symfony\Component\Console\Command\Command:
      tags: ['console.command']

    Kishlin\Backend\Shared\Domain\Bus\Event\EventSubscriber:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Domain\Bus\Command\CommandHandler:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Domain\Bus\Query\QueryHandler:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Infrastructure\Persistence\Repository\CacheRepository:
      bind:
        $connection: '@kishlin.app.infrastructure.connection.cache'

    Kishlin\Backend\Shared\Infrastructure\Persistence\Repository\CoreRepository:
      bind:
        $connection: '@kishlin.app.infrastructure.connection.core'

    Kishlin\Backend\Shared\Infrastructure\Monitoring\Probe\Probe:
      tags: ['kishlin.shared.infrastructure.monitoring.probe']

    Kishlin\Backend\MotorsportStatsScrapper\Infrastructure\DataModifier\Championship\AbstractChampionshipModifier:
      tags: ['kishlin.motorsportcache.infrastructure.data-mutator.championship']


##> Make some services public to override them in tests

when@test:
  services:

    Kishlin\Backend\Shared\Domain\Bus\Command\CommandBus:
      public: true

    Kishlin\Backend\Shared\Domain\Bus\Event\EventDispatcher:
      public: true

    Kishlin\Backend\Shared\Domain\Bus\Query\QueryBus:
      public: true

    Kishlin\Backend\Shared\Domain\Time\Clock:
      class: 'Kishlin\Backend\Shared\Infrastructure\Time\FrozenClock'


when@acceptance:
  services:
    Kishlin\Backend\Shared\Domain\Time\Clock:
      class: 'Kishlin\Backend\Shared\Infrastructure\Time\FrozenClock'
      public: true
