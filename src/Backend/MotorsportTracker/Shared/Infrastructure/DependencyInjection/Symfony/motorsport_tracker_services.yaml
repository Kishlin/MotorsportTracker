services:
  _defaults:
    autoconfigure: true
    autowire: true

  Kishlin\Backend\MotorsportTracker\:
    resource: '../../../../'
    exclude:
      - '../../../../*/Application/*/*Exception.php'
      - '../../../../*/Infrastructure/Persistence/Fixtures'
      - '../../../../*/Infrastructure/Persistence/Doctrine/DbalTypes'
      - '../../../../*/Domain/{DomainEvent,Entity,ReadModel,ValueObject,View}'


##> Persistence

  kishlin.app.infrastructure.entity_manager.core:
    class: Doctrine\ORM\EntityManagerInterface
    factory: [ Kishlin\Backend\MotorsportTracker\Shared\Infrastructure\Persistence\Doctrine\EntityManagerFactory\MotorsportTrackerEntityManagerFactory, create ]
    arguments:
      $parameters:
        url: '%kishlin.database.core.url%'
      $database: 'core'
      $environment: '%kishlin.app.environment%'
    public: true

  kishlin.app.infrastructure.entity_manager.cache:
    class: Doctrine\ORM\EntityManagerInterface
    factory: [ Kishlin\Backend\MotorsportTracker\Shared\Infrastructure\Persistence\Doctrine\EntityManagerFactory\MotorsportTrackerEntityManagerFactory, create ]
    arguments:
      $parameters:
        url: '%kishlin.database.cache.url%'
      $database: 'cache'
      $environment: '%kishlin.app.environment%'
    public: true

  Doctrine\ORM\EntityManagerInterface: '@kishlin.app.infrastructure.entity_manager.core'

  _instanceof:

    Kishlin\Backend\Shared\Domain\Bus\Event\DomainEventSubscriber:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Domain\Bus\Command\CommandHandler:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Domain\Bus\Query\QueryHandler:
      tags: ['kishlin.application_service']

    Kishlin\Backend\Shared\Infrastructure\Persistence\Doctrine\Repository\CacheRepository:
      bind:
        $entityManager: '@kishlin.app.infrastructure.entity_manager.cache'
